@model kartverket2025.Models.ViewModels.MapReportViewModel

@{
    ViewData["Title"] = "Add Report";
}

<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
    <link rel="stylesheet" href="~/css/report.css" />
</head>

<div class="report-container">
    <!-- Map -->
    <div class="report-map">
        <div id="map" style="height: 400px; width: 100%;"></div>
    </div>

    <!-- Add Report Form -->
    <div class="report-info">
        <span class="report-title">Add Report</span>
        <form asp-action="PreviewReport" method="post">
            <input type="hidden" id="geoJsonInput" asp-for="ReportAreaJson" hidden />

            <label for="title" class="report-label">Tittel</label>
            <textarea id="title" asp-for="ReportTitle" class="report-textarea" placeholder="Skriv tittel..." required></textarea>

            <label for="description" class="report-label">Beskrivelse</label>
            <textarea id="description" asp-for="ReportDescription" class="report-textarea" placeholder="Skriv beskrivelse..." required></textarea>

            <label for="latitude" class="report-label">Breddegrad</label>
            <input type="text" id="latitude" name="Latitude" class="report-input" readonly />

            <label for="longitude" class="report-label">Lengdegrad</label>
            <input type="text" id="longitude" name="Longitude" class="report-input" readonly />

            <label class="report-label">Kommunenavn</label>
            <input type="text" asp-for="ReportKommunenavn" id="municipalityInput" class="report-input" readonly />

            <label for="countryInput" class="report-label">Fylke</label>
            <input type="text" id="countryInput" asp-for="ReportFylkenavn" class="report-input" readonly />

            <button type="submit" class="report-btn">Se over innmelding</button>
        </form>
    </div>
</div>


@section Scripts {
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@turf/turf@6.5.0/turf.min.js"></script>

    <script>
        var map = L.map('map').setView([58.1467, 7.9956], 13);

        // 🌍 Define all base tile layers
        var baseLayers = {
           "Topofarge": L.tileLayer(
            'https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png',{
                attribution: '&copy; Kartverket' 
            }),
            "Topogråtone": L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', {
                attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
            }),
            "Turkart": L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/toporaster/default/webmercator/{z}/{y}/{x}.png',{
                attribution: '&copy; Kartverket' }),
            "Sjøkart": L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/sjokartraster/default/webmercator/{z}/{y}/{x}.png', {
                attribution: '&copy; Kartverket' 
             }),
            "Carto Light": L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
                attribution: '&copy; OpenStreetMap & CartoDB'
            }),
            "Carto Dark": L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
                attribution: '&copy; OpenStreetMap & CartoDB'
            })
        };  

        // Add default tile layer
        baseLayers["Topofarge"].addTo(map);
        let currentBase = baseLayers["Topofarge"];

        // 🎛️ Add theme-switcher dropdown as a Leaflet control
        L.Control.ThemeSwitcher = L.Control.extend({
            onAdd: function () {
                var div = L.DomUtil.create('div', 'leaflet-bar leaflet-control');
                var select = L.DomUtil.create('select', '', div);
                select.style.padding = "5px";

                for (let name in baseLayers) {
                    let option = document.createElement("option");
                    option.value = name;
                    option.text = name;
                    select.appendChild(option);
                }

                select.onchange = function () {
                    map.removeLayer(currentBase);
                    currentBase = baseLayers[this.value];
                    map.addLayer(currentBase);
                };

                L.DomEvent.disableClickPropagation(div);
                return div;
            },
            onRemove: function () { }
        });

        L.control.themeSwitcher = function (opts) {
            return new L.Control.ThemeSwitcher(opts);
        };
        L.control.themeSwitcher({ position: 'topright' }).addTo(map);

        // 🛠️ Drawing controls
        var drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);

        var drawControl = new L.Control.Draw({
            draw: {
                polygon: true,
                polyline: true,
                marker: true,
                circle: false,
                rectangle: true
            },
            edit: {
                featureGroup: drawnItems,
                remove: true
            }
        });
        map.addControl(drawControl);

        // 📍 Centroid helper
        function calculateCentroid(latlngs) {
            let totalLat = 0, totalLng = 0;
            latlngs.forEach(p => {
                totalLat += p.lat;
                totalLng += p.lng;
            });
            return {
                lat: totalLat / latlngs.length,
                lng: totalLng / latlngs.length
            };
        }

        // 📦 On shape created
        map.on(L.Draw.Event.CREATED, function (e) {
            var type = e.layerType, layer = e.layer;

            drawnItems.addLayer(layer);

            var geoJsonData = layer.toGeoJSON();
            var geoJsonString = JSON.stringify(geoJsonData);
            document.getElementById('geoJsonInput').value = geoJsonString;

            var centroid = turf.centroid(geoJsonData);
            var geoLon = centroid.geometry.coordinates[0];
            var geoLat = centroid.geometry.coordinates[1];

            document.getElementById('latitude').value = geoLat;
            document.getElementById('longitude').value = geoLon;

            fetch('https://api.kartverket.no/kommuneinfo/v1/punkt?nord=' + geoLat + '&ost=' + geoLon + '&koordsys=4258')
                .then(res => res.json())
                .then(data => {
                    document.getElementById('municipalityInput').value = data.kommunenavn;
                    document.getElementById('countryInput').value = data.fylkesnavn;
                })
                .catch(() => console.log('Error fetching kommune info'));
        });

        // 🧹 Clear on delete/edit
        map.on('draw:deleted draw:edited', function () {
            document.getElementById('geoJsonInput').value = '';
            document.getElementById('latitude').value = '';
            document.getElementById('longitude').value = '';
        });
    </script>
}